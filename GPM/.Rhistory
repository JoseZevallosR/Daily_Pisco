install.packages("rgdal")
library(gdal)
library(rgdal)
if (require(sp)==F) install.packages('sp',repos='http://cran.us.r-project.org')
if (require(shiny)==F) install.packages('shiny',repos='http://cran.us.r-project.org')
if (require(zoo)==F) install.packages('zoo',repos='http://cran.us.r-project.org')
if (require(rgeos)==F) install.packages('rgeos',repos='http://cran.us.r-project.org')
if (require(gstat)==F) install.packages('gstat',repos='http://cran.us.r-project.org')
if (require(automap)==F) install.packages('automap',repos='http://cran.us.r-project.org')
if (require(rgdal)==F) install.packages('rgdal',repos='http://cran.us.r-project.org')
if (require(hydroGOF)==F) install.packages('hydroGOF',repos='http://cran.us.r-project.org')
if (require(raster)==F) install.packages('raster',repos='http://cran.us.r-project.org')
if (require(gdalUtils)==F) install.packages('gdalUtils',repos='http://cran.us.r-project.org')
if (require(RCurl)==F) install.packages('RCurl',repos='http://cran.us.r-project.org')
if (require(XML)==F) install.packages('XML',repos='http://cran.us.r-project.org')
if (require(RSelenium)==F) install.packages('RSelenium',repos='http://cran.us.r-project.org')
if (require(doSNOW)==F) install.packages('doSNOW',repos='http://cran.us.r-project.org')
if (require(foreach)==F) install.packages('foreach',repos='http://cran.us.r-project.org')
if (require(leaflet)==F) install.packages('leaflet',repos='http://cran.us.r-project.org')
if (require(tcltk)==F) install.packages('tcltk',repos='http://cran.us.r-project.org')
source('Documents/Control/DESCARGA.R')
r=raster(choose.files())
if (require(sp)==F) install.packages('sp',repos='http://cran.us.r-project.org')
if (require(shiny)==F) install.packages('shiny',repos='http://cran.us.r-project.org')
if (require(zoo)==F) install.packages('zoo',repos='http://cran.us.r-project.org')
if (require(rgeos)==F) install.packages('rgeos',repos='http://cran.us.r-project.org')
if (require(gstat)==F) install.packages('gstat',repos='http://cran.us.r-project.org')
if (require(automap)==F) install.packages('automap',repos='http://cran.us.r-project.org')
if (require(rgdal)==F) install.packages('rgdal',repos='http://cran.us.r-project.org')
if (require(hydroGOF)==F) install.packages('hydroGOF',repos='http://cran.us.r-project.org')
if (require(raster)==F) install.packages('raster',repos='http://cran.us.r-project.org')
if (require(gdalUtils)==F) install.packages('gdalUtils',repos='http://cran.us.r-project.org')
if (require(RCurl)==F) install.packages('RCurl',repos='http://cran.us.r-project.org')
if (require(XML)==F) install.packages('XML',repos='http://cran.us.r-project.org')
if (require(RSelenium)==F) install.packages('RSelenium',repos='http://cran.us.r-project.org')
if (require(doSNOW)==F) install.packages('doSNOW',repos='http://cran.us.r-project.org')
if (require(foreach)==F) install.packages('foreach',repos='http://cran.us.r-project.org')
if (require(leaflet)==F) install.packages('leaflet',repos='http://cran.us.r-project.org')
if (require(tcltk)==F) install.packages('tcltk',repos='http://cran.us.r-project.org')
file.choose()
runApp('Documents/Control')
runApp(appDir = path0,launch.browser = F)
runApp(appDir = path0)
Sys.Date()
DOWNFgpm<-function(inicio="2016-07-02",
fin="2016-07-13",
fileLocation="/home/jose/Documents/gitfiles/Daily_Pisco/GPM",
user="aybar1994@gmail.com",
password="aybar1994@gmail.com",
maxspeeddownload= 504800, # 504,800 Bytes/second (500KB/s)
numconnections='3',
band=6,
BBlonMin = -86,
BBlonMax = -66,
BBlatMin = -19.25,
BBlatMax = 1.25
){
if (!require(RCurl)) stop("Package RCurl is not installed")
if (!require(raster)) stop("Package raster is not installed")
if (!require(rgdal)) stop("Package rgdal is not installed")
if (!require(gdalUtils)) stop("Package gdalUtils is not installed")
#---------------------------------------
fechadeinicio<-as.Date(inicio)
fechadefin<-as.Date(fin)
#---------------------------------------
rutadeguardado<-fileLocation  #define working directory
sq<-seq(from = fechadeinicio,to = fechadefin,by = "day")
levels<-levels(factor(substr(sq,1,7)))
year<-substr(levels,1,4)
month<-substr(levels,6,7)
url<-"ftp://jsimpson.pps.eosdis.nasa.gov/NRTPUB/imerg/early"
howfile<-function(i){
myURL <- paste(url,"/",year[i],month[i],"/",sep="")
filenames <- getURL(myURL, ftp.use.epsv = FALSE, ftplistonly=TRUE, crlf=TRUE,userpwd="aybar1994@gmail.com:aybar1994@gmail.com")
filePaths <- paste(myURL, strsplit(filenames, "\r*\n")[[1]], sep="")
#La siguiente linea selecciona solo  los productos .bin
selectedfilePaths <- filePaths[grep(filePaths,pattern=paste("\\-H5$"))]
}
k<-mapply(howfile,i=1:length(year))
baseF<-unlist(k)
baseF<-sort(baseF)
#-------------------------
#Download day for day
#-------------------------
setwd(fileLocation)
DownTRMM<-function(i){
day1<-baseF[grep(baseF,pattern = paste0("\\.",substr(sq[i],1,4),substr(sq[i],6,7),substr(sq[i],9,10)))]
day2<-baseF[grep(baseF,pattern = paste0("\\.",substr(sq[i]+1,1,4),substr(sq[i]+1,6,7),substr(sq[i]+1,9,10)))]
dayF<-c(day1,day2)
selectedfilePaths<-dayF[25:72]
#Esta linea empieza la descarga
down<- function(Url = paste0("ftp://",user,":",password,"@",substr(selectedfilePaths,7,150)),
bs = basename(selectedfilePaths),kk){
system(paste0("axel -n ",numconnections,
" -s ",maxspeeddownload," ",Url," -o ",paste0(fileLocation,"/",bs))[kk]) }
mapply(down,kk=1:48)
y<- function(a,b) system(paste0('gdal_translate ',get_subdatasets(a)[band]," ",b,"-",band,".tif"))
file_path<-list.files(fileLocation,pattern = "\\-H5$")
for (ii in 1:48){
y(file_path[ii],basename(file_path)[ii])
baseraster <- raster(extent(-180,180,-90,90))
res(baseraster) <- 0.1
projection(baseraster) <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
rl<-list.files(pattern = "H5-6")[1]
rl1<-t(as.matrix(raster(rl)))
mtrx = matrix(rl1, nrow=1800, ncol=3600)
baseraster[]<-mtrx
flp<-flip(baseraster,direction = "y")
prec<-crop(flp,extent(BBlonMin,BBlonMax,BBlatMin,BBlatMax) )
writeRaster(prec/2,paste0("XXX",substr(rl,24,39),".tif"))
file.remove(file_path[ii])
file.remove(rl)
}
lttt<-list.files(fileLocation,pattern="XXX")
ltt2<-lttt
sttk<-stack(ltt2)
sum<-sum(sttk/2)
writeRaster(sum/2,paste0("GPM.",sq[i],".tif"),overwrite=T)
file.remove(list.files(fileLocation,pattern="XXX"))
}
mapply(DownTRMM,1:length(sq))
}
DOWNFgpm()
DOWNFgpm<-function(inicio="2016-07-04",
fin="2016-07-13",
fileLocation="/home/jose/Documents/gitfiles/Daily_Pisco/GPM",
user="aybar1994@gmail.com",
password="aybar1994@gmail.com",
maxspeeddownload= 504800, # 504,800 Bytes/second (500KB/s)
numconnections='3',
band=6,
BBlonMin = -86,
BBlonMax = -66,
BBlatMin = -19.25,
BBlatMax = 1.25
){
if (!require(RCurl)) stop("Package RCurl is not installed")
if (!require(raster)) stop("Package raster is not installed")
if (!require(rgdal)) stop("Package rgdal is not installed")
if (!require(gdalUtils)) stop("Package gdalUtils is not installed")
#---------------------------------------
fechadeinicio<-as.Date(inicio)
fechadefin<-as.Date(fin)
#---------------------------------------
rutadeguardado<-fileLocation  #define working directory
sq<-seq(from = fechadeinicio,to = fechadefin,by = "day")
levels<-levels(factor(substr(sq,1,7)))
year<-substr(levels,1,4)
month<-substr(levels,6,7)
url<-"ftp://jsimpson.pps.eosdis.nasa.gov/NRTPUB/imerg/early"
howfile<-function(i){
myURL <- paste(url,"/",year[i],month[i],"/",sep="")
filenames <- getURL(myURL, ftp.use.epsv = FALSE, ftplistonly=TRUE, crlf=TRUE,userpwd="aybar1994@gmail.com:aybar1994@gmail.com")
filePaths <- paste(myURL, strsplit(filenames, "\r*\n")[[1]], sep="")
#La siguiente linea selecciona solo  los productos .bin
selectedfilePaths <- filePaths[grep(filePaths,pattern=paste("\\-H5$"))]
}
k<-mapply(howfile,i=1:length(year))
baseF<-unlist(k)
baseF<-sort(baseF)
#-------------------------
#Download day for day
#-------------------------
setwd(fileLocation)
DownTRMM<-function(i){
day1<-baseF[grep(baseF,pattern = paste0("\\.",substr(sq[i],1,4),substr(sq[i],6,7),substr(sq[i],9,10)))]
day2<-baseF[grep(baseF,pattern = paste0("\\.",substr(sq[i]+1,1,4),substr(sq[i]+1,6,7),substr(sq[i]+1,9,10)))]
dayF<-c(day1,day2)
selectedfilePaths<-dayF[25:72]
#Esta linea empieza la descarga
down<- function(Url = paste0("ftp://",user,":",password,"@",substr(selectedfilePaths,7,150)),
bs = basename(selectedfilePaths),kk){
system(paste0("axel -n ",numconnections,
" -s ",maxspeeddownload," ",Url," -o ",paste0(fileLocation,"/",bs))[kk]) }
mapply(down,kk=1:48)
y<- function(a,b) system(paste0('gdal_translate ',get_subdatasets(a)[band]," ",b,"-",band,".tif"))
file_path<-list.files(fileLocation,pattern = "\\-H5$")
for (ii in 1:48){
y(file_path[ii],basename(file_path)[ii])
baseraster <- raster(extent(-180,180,-90,90))
res(baseraster) <- 0.1
projection(baseraster) <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
rl<-list.files(pattern = "H5-6")[1]
rl1<-t(as.matrix(raster(rl)))
mtrx = matrix(rl1, nrow=1800, ncol=3600)
baseraster[]<-mtrx
flp<-flip(baseraster,direction = "y")
prec<-crop(flp,extent(BBlonMin,BBlonMax,BBlatMin,BBlatMax) )
writeRaster(prec/2,paste0("XXX",substr(rl,24,39),".tif"))
file.remove(file_path[ii])
file.remove(rl)
}
lttt<-list.files(fileLocation,pattern="XXX")
ltt2<-lttt
sttk<-stack(ltt2)
sum<-sum(sttk/2)
writeRaster(sum/2,paste0("GPM.",sq[i],".tif"),overwrite=T)
file.remove(list.files(fileLocation,pattern="XXX"))
}
mapply(DownTRMM,1:length(sq))
}
DOWNFgpm()
